/**
 * json-variables
 * It's like SASS variables, but for JSON
 * Version: 8.0.56
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/json-variables
 */

!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t=t||self).jsonVariables=e()}(this,(function(){"use strict";function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(e)}var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function r(t,e){return t(e={exports:{}},e.exports),e.exports}var n=r((function(t,r){var n="[object Arguments]",i="[object Function]",a="[object GeneratorFunction]",o="[object Map]",s="[object Set]",l=/\w*$/,u=/^\[object .+?Constructor\]$/,c=/^(?:0|[1-9]\d*)$/,h={};h[n]=h["[object Array]"]=h["[object ArrayBuffer]"]=h["[object DataView]"]=h["[object Boolean]"]=h["[object Date]"]=h["[object Float32Array]"]=h["[object Float64Array]"]=h["[object Int8Array]"]=h["[object Int16Array]"]=h["[object Int32Array]"]=h[o]=h["[object Number]"]=h["[object Object]"]=h["[object RegExp]"]=h[s]=h["[object String]"]=h["[object Symbol]"]=h["[object Uint8Array]"]=h["[object Uint8ClampedArray]"]=h["[object Uint16Array]"]=h["[object Uint32Array]"]=!0,h["[object Error]"]=h[i]=h["[object WeakMap]"]=!1;var f="object"==typeof e&&e&&e.Object===Object&&e,g="object"==typeof self&&self&&self.Object===Object&&self,p=f||g||Function("return this")(),d=r&&!r.nodeType&&r,y=d&&t&&!t.nodeType&&t,m=y&&y.exports===d;function b(t,e){return t.set(e[0],e[1]),t}function w(t,e){return t.add(e),t}function v(t,e,r,n){var i=-1,a=t?t.length:0;for(n&&a&&(r=t[++i]);++i<a;)r=e(r,t[i],i,t);return r}function _(t){var e=!1;if(null!=t&&"function"!=typeof t.toString)try{e=!!(t+"")}catch(t){}return e}function T(t){var e=-1,r=Array(t.size);return t.forEach((function(t,n){r[++e]=[n,t]})),r}function O(t,e){return function(r){return t(e(r))}}function A(t){var e=-1,r=Array(t.size);return t.forEach((function(t){r[++e]=t})),r}var W,j=Array.prototype,I=Function.prototype,$=Object.prototype,E=p["__core-js_shared__"],S=(W=/[^.]+$/.exec(E&&E.keys&&E.keys.IE_PROTO||""))?"Symbol(src)_1."+W:"",R=I.toString,D=$.hasOwnProperty,H=$.toString,N=RegExp("^"+R.call(D).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),x=m?p.Buffer:void 0,M=p.Symbol,C=p.Uint8Array,B=O(Object.getPrototypeOf,Object),k=Object.create,F=$.propertyIsEnumerable,J=j.splice,V=Object.getOwnPropertySymbols,P=x?x.isBuffer:void 0,q=O(Object.keys,Object),L=yt(p,"DataView"),U=yt(p,"Map"),z=yt(p,"Promise"),G=yt(p,"Set"),K=yt(p,"WeakMap"),Q=yt(Object,"create"),X=_t(L),Y=_t(U),Z=_t(z),tt=_t(G),et=_t(K),rt=M?M.prototype:void 0,nt=rt?rt.valueOf:void 0;function it(t){var e=-1,r=t?t.length:0;for(this.clear();++e<r;){var n=t[e];this.set(n[0],n[1])}}function at(t){var e=-1,r=t?t.length:0;for(this.clear();++e<r;){var n=t[e];this.set(n[0],n[1])}}function ot(t){var e=-1,r=t?t.length:0;for(this.clear();++e<r;){var n=t[e];this.set(n[0],n[1])}}function st(t){this.__data__=new at(t)}function lt(t,e){var r=Ot(t)||function(t){return function(t){return function(t){return!!t&&"object"==typeof t}(t)&&At(t)}(t)&&D.call(t,"callee")&&(!F.call(t,"callee")||H.call(t)==n)}(t)?function(t,e){for(var r=-1,n=Array(t);++r<t;)n[r]=e(r);return n}(t.length,String):[],i=r.length,a=!!i;for(var o in t)!e&&!D.call(t,o)||a&&("length"==o||wt(o,i))||r.push(o);return r}function ut(t,e,r){var n=t[e];D.call(t,e)&&Tt(n,r)&&(void 0!==r||e in t)||(t[e]=r)}function ct(t,e){for(var r=t.length;r--;)if(Tt(t[r][0],e))return r;return-1}function ht(t,e,r,u,c,f,g){var p;if(u&&(p=f?u(t,c,f,g):u(t)),void 0!==p)return p;if(!It(t))return t;var d=Ot(t);if(d){if(p=function(t){var e=t.length,r=t.constructor(e);e&&"string"==typeof t[0]&&D.call(t,"index")&&(r.index=t.index,r.input=t.input);return r}(t),!e)return function(t,e){var r=-1,n=t.length;e||(e=Array(n));for(;++r<n;)e[r]=t[r];return e}(t,p)}else{var y=bt(t),m=y==i||y==a;if(Wt(t))return function(t,e){if(e)return t.slice();var r=new t.constructor(t.length);return t.copy(r),r}(t,e);if("[object Object]"==y||y==n||m&&!f){if(_(t))return f?t:{};if(p=function(t){return"function"!=typeof t.constructor||vt(t)?{}:(e=B(t),It(e)?k(e):{});var e}(m?{}:t),!e)return function(t,e){return pt(t,mt(t),e)}(t,function(t,e){return t&&pt(e,$t(e),t)}(p,t))}else{if(!h[y])return f?t:{};p=function(t,e,r,n){var i=t.constructor;switch(e){case"[object ArrayBuffer]":return gt(t);case"[object Boolean]":case"[object Date]":return new i(+t);case"[object DataView]":return function(t,e){var r=e?gt(t.buffer):t.buffer;return new t.constructor(r,t.byteOffset,t.byteLength)}(t,n);case"[object Float32Array]":case"[object Float64Array]":case"[object Int8Array]":case"[object Int16Array]":case"[object Int32Array]":case"[object Uint8Array]":case"[object Uint8ClampedArray]":case"[object Uint16Array]":case"[object Uint32Array]":return function(t,e){var r=e?gt(t.buffer):t.buffer;return new t.constructor(r,t.byteOffset,t.length)}(t,n);case o:return function(t,e,r){return v(e?r(T(t),!0):T(t),b,new t.constructor)}(t,n,r);case"[object Number]":case"[object String]":return new i(t);case"[object RegExp]":return function(t){var e=new t.constructor(t.source,l.exec(t));return e.lastIndex=t.lastIndex,e}(t);case s:return function(t,e,r){return v(e?r(A(t),!0):A(t),w,new t.constructor)}(t,n,r);case"[object Symbol]":return a=t,nt?Object(nt.call(a)):{}}var a}(t,y,ht,e)}}g||(g=new st);var O=g.get(t);if(O)return O;if(g.set(t,p),!d)var W=r?function(t){return function(t,e,r){var n=e(t);return Ot(t)?n:function(t,e){for(var r=-1,n=e.length,i=t.length;++r<n;)t[i+r]=e[r];return t}(n,r(t))}(t,$t,mt)}(t):$t(t);return function(t,e){for(var r=-1,n=t?t.length:0;++r<n&&!1!==e(t[r],r,t););}(W||t,(function(n,i){W&&(n=t[i=n]),ut(p,i,ht(n,e,r,u,i,t,g))})),p}function ft(t){return!(!It(t)||(e=t,S&&S in e))&&(jt(t)||_(t)?N:u).test(_t(t));var e}function gt(t){var e=new t.constructor(t.byteLength);return new C(e).set(new C(t)),e}function pt(t,e,r,n){r||(r={});for(var i=-1,a=e.length;++i<a;){var o=e[i],s=n?n(r[o],t[o],o,r,t):void 0;ut(r,o,void 0===s?t[o]:s)}return r}function dt(t,e){var r,n,i=t.__data__;return("string"==(n=typeof(r=e))||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==r:null===r)?i["string"==typeof e?"string":"hash"]:i.map}function yt(t,e){var r=function(t,e){return null==t?void 0:t[e]}(t,e);return ft(r)?r:void 0}it.prototype.clear=function(){this.__data__=Q?Q(null):{}},it.prototype.delete=function(t){return this.has(t)&&delete this.__data__[t]},it.prototype.get=function(t){var e=this.__data__;if(Q){var r=e[t];return"__lodash_hash_undefined__"===r?void 0:r}return D.call(e,t)?e[t]:void 0},it.prototype.has=function(t){var e=this.__data__;return Q?void 0!==e[t]:D.call(e,t)},it.prototype.set=function(t,e){return this.__data__[t]=Q&&void 0===e?"__lodash_hash_undefined__":e,this},at.prototype.clear=function(){this.__data__=[]},at.prototype.delete=function(t){var e=this.__data__,r=ct(e,t);return!(r<0)&&(r==e.length-1?e.pop():J.call(e,r,1),!0)},at.prototype.get=function(t){var e=this.__data__,r=ct(e,t);return r<0?void 0:e[r][1]},at.prototype.has=function(t){return ct(this.__data__,t)>-1},at.prototype.set=function(t,e){var r=this.__data__,n=ct(r,t);return n<0?r.push([t,e]):r[n][1]=e,this},ot.prototype.clear=function(){this.__data__={hash:new it,map:new(U||at),string:new it}},ot.prototype.delete=function(t){return dt(this,t).delete(t)},ot.prototype.get=function(t){return dt(this,t).get(t)},ot.prototype.has=function(t){return dt(this,t).has(t)},ot.prototype.set=function(t,e){return dt(this,t).set(t,e),this},st.prototype.clear=function(){this.__data__=new at},st.prototype.delete=function(t){return this.__data__.delete(t)},st.prototype.get=function(t){return this.__data__.get(t)},st.prototype.has=function(t){return this.__data__.has(t)},st.prototype.set=function(t,e){var r=this.__data__;if(r instanceof at){var n=r.__data__;if(!U||n.length<199)return n.push([t,e]),this;r=this.__data__=new ot(n)}return r.set(t,e),this};var mt=V?O(V,Object):function(){return[]},bt=function(t){return H.call(t)};function wt(t,e){return!!(e=null==e?9007199254740991:e)&&("number"==typeof t||c.test(t))&&t>-1&&t%1==0&&t<e}function vt(t){var e=t&&t.constructor;return t===("function"==typeof e&&e.prototype||$)}function _t(t){if(null!=t){try{return R.call(t)}catch(t){}try{return t+""}catch(t){}}return""}function Tt(t,e){return t===e||t!=t&&e!=e}(L&&"[object DataView]"!=bt(new L(new ArrayBuffer(1)))||U&&bt(new U)!=o||z&&"[object Promise]"!=bt(z.resolve())||G&&bt(new G)!=s||K&&"[object WeakMap]"!=bt(new K))&&(bt=function(t){var e=H.call(t),r="[object Object]"==e?t.constructor:void 0,n=r?_t(r):void 0;if(n)switch(n){case X:return"[object DataView]";case Y:return o;case Z:return"[object Promise]";case tt:return s;case et:return"[object WeakMap]"}return e});var Ot=Array.isArray;function At(t){return null!=t&&function(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=9007199254740991}(t.length)&&!jt(t)}var Wt=P||function(){return!1};function jt(t){var e=It(t)?H.call(t):"";return e==i||e==a}function It(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}function $t(t){return At(t)?lt(t):function(t){if(!vt(t))return q(t);var e=[];for(var r in Object(t))D.call(t,r)&&"constructor"!=r&&e.push(r);return e}(t)}t.exports=function(t){return ht(t,!0,!0)}}));function i(t){return"string"==typeof t&&t.length&&"."===t[0]?t.slice(1):t}function a(t,e){return function t(e,r,a,o){const s=n(e);let l,u,c;if((a=Object.assign({depth:-1,path:""},a)).depth+=1,Array.isArray(s))for(l=0,u=s.length;l<u&&!o.now;l++){const e=`${a.path}.${l}`;void 0!==s[l]?(a.parent=n(s),a.parentType="array",c=t(r(s[l],void 0,Object.assign({},a,{path:i(e)}),o),r,Object.assign({},a,{path:i(e)}),o),Number.isNaN(c)&&l<s.length?(s.splice(l,1),l-=1):s[l]=c):s.splice(l,1)}else if((h=s)&&"object"==typeof h&&!Array.isArray(h))for(const e in s){if(o.now&&null!=e)break;const l=`${a.path}.${e}`;0===a.depth&&null!=e&&(a.topmostKey=e),a.parent=n(s),a.parentType="object",c=t(r(e,s[e],Object.assign({},a,{path:i(l)}),o),r,Object.assign({},a,{path:i(l)}),o),Number.isNaN(c)?delete s[e]:s[e]=c}var h;return s}(t,e,{},{now:!1})}const o=/[|\\{}()[\]^$+*?.-]/g;const s=new Map;function l(t,e){e={caseSensitive:!1,...e};const r=t+JSON.stringify(e);if(s.has(r))return s.get(r);const n="!"===t[0];n&&(t=t.slice(1)),t=(t=>{if("string"!=typeof t)throw new TypeError("Expected a string");return t.replace(o,"\\$&")})(t).replace(/\\\*/g,".*");const i=new RegExp(`^${t}$`,e.caseSensitive?"":"i");return i.negated=n,s.set(r,i),i}var u=(t,e,r)=>{if(!Array.isArray(t)||!Array.isArray(e))throw new TypeError(`Expected two arrays, got ${typeof t} ${typeof e}`);if(0===e.length)return t;const n="!"===e[0][0];e=e.map(t=>l(t,r));const i=[];for(const r of t){let t=n;for(const n of e)n.test(r)&&(t=!n.negated);t&&i.push(r)}return i};u.isMatch=(t,e,r)=>{const n=Array.isArray(t)?t:[t],i=Array.isArray(e)?e:[e];return n.some(t=>i.every(e=>{const n=l(e,r),i=n.test(t);return n.negated?!i:i}))};var c=r((function(t){t.exports=function(){var t=Object.prototype.toString;function e(t,e){return null!=t&&Object.prototype.hasOwnProperty.call(t,e)}function r(t){if(!t)return!0;if(i(t)&&0===t.length)return!0;if("string"!=typeof t){for(var r in t)if(e(t,r))return!1;return!0}return!1}function n(e){return t.call(e)}var i=Array.isArray||function(e){return"[object Array]"===t.call(e)};function a(t){var e=parseInt(t);return e.toString()===t?e:t}function o(t){t=t||{};var o=function(t){return Object.keys(o).reduce((function(e,r){return"create"===r||"function"==typeof o[r]&&(e[r]=o[r].bind(o,t)),e}),{})};function s(r,n){return t.includeInheritedProps||"number"==typeof n&&Array.isArray(r)||e(r,n)}function l(t,e){if(s(t,e))return t[e]}function u(t,e,r,n){if("number"==typeof e&&(e=[e]),!e||0===e.length)return t;if("string"==typeof e)return u(t,e.split(".").map(a),r,n);var i=e[0],o=l(t,i);return 1===e.length?(void 0!==o&&n||(t[i]=r),o):(void 0===o&&("number"==typeof e[1]?t[i]=[]:t[i]={}),u(t[i],e.slice(1),r,n))}return o.has=function(r,n){if("number"==typeof n?n=[n]:"string"==typeof n&&(n=n.split(".")),!n||0===n.length)return!!r;for(var o=0;o<n.length;o++){var s=a(n[o]);if(!("number"==typeof s&&i(r)&&s<r.length||(t.includeInheritedProps?s in Object(r):e(r,s))))return!1;r=r[s]}return!0},o.ensureExists=function(t,e,r){return u(t,e,r,!0)},o.set=function(t,e,r,n){return u(t,e,r,n)},o.insert=function(t,e,r,n){var a=o.get(t,e);n=~~n,i(a)||(a=[],o.set(t,e,a)),a.splice(n,0,r)},o.empty=function(t,e){var a,l;if(!r(e)&&null!=t&&(a=o.get(t,e))){if("string"==typeof a)return o.set(t,e,"");if(function(t){return"boolean"==typeof t||"[object Boolean]"===n(t)}(a))return o.set(t,e,!1);if("number"==typeof a)return o.set(t,e,0);if(i(a))a.length=0;else{if(!function(t){return"object"==typeof t&&"[object Object]"===n(t)}(a))return o.set(t,e,null);for(l in a)s(a,l)&&delete a[l]}}},o.push=function(t,e){var r=o.get(t,e);i(r)||(r=[],o.set(t,e,r)),r.push.apply(r,Array.prototype.slice.call(arguments,2))},o.coalesce=function(t,e,r){for(var n,i=0,a=e.length;i<a;i++)if(void 0!==(n=o.get(t,e[i])))return n;return r},o.get=function(t,e,r){if("number"==typeof e&&(e=[e]),!e||0===e.length)return t;if(null==t)return r;if("string"==typeof e)return o.get(t,e.split("."),r);var n=a(e[0]),i=l(t,n);return void 0===i?r:1===e.length?i:o.get(t[n],e.slice(1),r)},o.del=function(t,e){if("number"==typeof e&&(e=[e]),null==t)return t;if(r(e))return t;if("string"==typeof e)return o.del(t,e.split("."));var n=a(e[0]);return s(t,n)?1!==e.length?o.del(t[n],e.slice(1)):(i(t)?t.splice(n,1):delete t[n],t):t},o}var s=o();return s.create=o,s.withInheritedProps=o({includeInheritedProps:!0}),s}()}));function h(t){return"string"==typeof t?t.length>0?[t]:[]:t}function f(t){return t&&"object"==typeof t&&!Array.isArray(t)}function g(t){return"string"==typeof t}function p(t,e,r,n,i,a){const o="function"==typeof r?r():r;if(e<0&&i&&"EOL"===o)return o;if(e>=t.length&&!i)return!1;let s=i?1:r.length,l=!1,u=!1,c=n.maxMismatches,h=e,f=!1,g=!1,p=!1;for(;t[h];){const e=a(h);if(n.trimBeforeMatching&&""===t[h].trim()){if(!t[e]&&i&&"EOL"===r)return!0;h=a(h);continue}if(!n.i&&n.trimCharsBeforeMatching.includes(t[h])||n.i&&n.trimCharsBeforeMatching.map(t=>t.toLowerCase()).includes(t[h].toLowerCase())){if(i&&"EOL"===r&&!t[e])return!0;h=a(h);continue}const o=e>h?r[r.length-s]:r[s-1];if(!n.i&&t[h]===o||n.i&&t[h].toLowerCase()===o.toLowerCase()){if(f||(f=!0),u||(u=!0),s===r.length?g=!0:1===s&&(p=!0),s-=1,s<1)return h}else{if(!(n.maxMismatches&&c&&h))return!(0!==h||1!==s||n.lastMustMatch||!u)&&0;c--;for(let i=0;i<=c;i++){const o=e>h?r[r.length-s+1+i]:r[s-2-i],l=t[a(h)];if(o&&(!n.i&&t[h]===o||n.i&&t[h].toLowerCase()===o.toLowerCase())&&(!n.firstMustMatch||s!==r.length)){s-=2,f=!0;break}if(l&&o&&(!n.i&&l===o||n.i&&l.toLowerCase()===o.toLowerCase())&&(!n.firstMustMatch||s!==r.length)){s-=1,f=!0;break}if(void 0===o&&c>=0&&f&&(!n.firstMustMatch||g)&&(!n.lastMustMatch||p))return h}f||(l=h)}if(!1!==l&&l!==h&&(l=!1),s<1)return h;h=a(h)}return s>0?!(!i||"EOL"!==o)||!!(n.maxMismatches>=s&&u)&&(l||0):void 0}function d(t,e,r,n,i){if(f(i)&&Object.prototype.hasOwnProperty.call(i,"trimBeforeMatching")&&"boolean"!=typeof i.trimBeforeMatching)throw new Error(`string-match-left-right/${t}(): [THROW_ID_09] opts.trimBeforeMatching should be boolean!${Array.isArray(i.trimBeforeMatching)?" Did you mean to use opts.trimCharsBeforeMatching?":""}`);const a=Object.assign({},{i:!1,trimBeforeMatching:!1,trimCharsBeforeMatching:[],maxMismatches:0,firstMustMatch:!1,lastMustMatch:!1},i);if(a.trimCharsBeforeMatching=h(a.trimCharsBeforeMatching),a.trimCharsBeforeMatching=a.trimCharsBeforeMatching.map(t=>g(t)?t:String(t)),!g(e))return!1;if(!e.length)return!1;if(!Number.isInteger(r)||r<0)throw new Error(`string-match-left-right/${t}(): [THROW_ID_03] the second argument should be a natural number. Currently it's of a type: ${typeof r}, equal to:\n${JSON.stringify(r,null,4)}`);let o,s,l,u;if(g(n))o=[n];else if(Array.isArray(n))o=n;else if(n){if("function"!=typeof n)throw new Error(`string-match-left-right/${t}(): [THROW_ID_05] the third argument, whatToMatch, is neither string nor array of strings! It's ${typeof n}, equal to:\n${JSON.stringify(n,null,4)}`);o=[],o.push(n)}else o=n;if(i&&!f(i))throw new Error(`string-match-left-right/${t}(): [THROW_ID_06] the fourth argument, options object, should be a plain object. Currently it's of a type "${typeof i}", and equal to:\n${JSON.stringify(i,null,4)}`);if(a.trimCharsBeforeMatching.some((t,e)=>t.length>1&&(l=e,u=t,!0)))throw new Error(`string-match-left-right/${t}(): [THROW_ID_07] the fourth argument, options object contains trimCharsBeforeMatching. It was meant to list the single characters but one of the entries at index ${l} is longer than 1 character, ${u.length} (equals to ${u}). Please split it into separate characters and put into array as separate elements.`);if(!o||!Array.isArray(o)||Array.isArray(o)&&!o.length||Array.isArray(o)&&1===o.length&&g(o[0])&&!o[0].trim().length){if("function"==typeof a.cb){let n,i=r;if("matchLeftIncl"!==t&&"matchRight"!==t||(i+=1),"L"===t[5])for(let t=i;t--;){const r=e[t];if((!a.trimBeforeMatching||a.trimBeforeMatching&&void 0!==r&&r.trim().length)&&(!a.trimCharsBeforeMatching.length||void 0!==r&&!a.trimCharsBeforeMatching.includes(r))){n=t;break}}else if(t.startsWith("matchRight"))for(let t=i;t<e.length;t++){const r=e[t];if((!a.trimBeforeMatching||a.trimBeforeMatching&&r.trim().length)&&(!a.trimCharsBeforeMatching.length||!a.trimCharsBeforeMatching.includes(r))){n=t;break}}if(void 0===n)return!1;const o=e[n],s=n+1;let l="";return s&&s>0&&(l=e.slice(0,s)),"L"===t[5]?a.cb(o,l,n):(n&&n>0&&(l=e.slice(n)),a.cb(o,l,n))}let n="";throw i||(n=" More so, the whole options object, the fourth input argument, is missing!"),new Error(`string-match-left-right/${t}(): [THROW_ID_08] the third argument, "whatToMatch", was given as an empty string. This means, you intend to match purely by a callback. The callback was not set though, the opts key "cb" is not set!${n}`)}for(let n=0,i=o.length;n<i;n++){s="function"==typeof o[n];const i=o[n];let l,u,c="",h=r;"matchRight"===t?h++:"matchLeft"===t&&h--;const f=p(e,h,i,a,s,e=>"L"===t[5]?e-1:e+1);if(f&&s&&"function"==typeof i&&"EOL"===i())return!(!i()||a.cb&&!a.cb(l,c,u))&&i();if(Number.isInteger(f)&&(u=t.startsWith("matchLeft")?f-1:f+1,c="L"===t[5]?e.slice(0,f):e.slice(u)),u<0&&(u=void 0),e[u]&&(l=e[u]),Number.isInteger(f)&&(!a.cb||a.cb(l,c,u)))return i}return!1}function y(t,e,r,n){return d("matchLeftIncl",t,e,r,n)}function m(t,e,r,n){return d("matchRightIncl",t,e,r,n)}function b(t){return"string"==typeof t}function w(t,e,r,n){if(n&&(!(i=n)||"object"!=typeof i||Array.isArray(i)))throw new TypeError(`string-find-heads-tails: [THROW_ID_01] the fourth input argument, an Optional Options Object, must be a plain object! Currently it's equal to: ${n} (type: ${typeof n})`);var i;const a={fromIndex:0,throwWhenSomethingWrongIsDetected:!0,allowWholeValueToBeOnlyHeadsOrTails:!0,source:"string-find-heads-tails",matchHeadsAndTailsStrictlyInPairsByTheirOrder:!1,relaxedAPI:!1},o=Object.assign({},a,n);if("string"==typeof o.fromIndex&&/^\d*$/.test(o.fromIndex))o.fromIndex=Number(o.fromIndex);else if(!Number.isInteger(o.fromIndex)||o.fromIndex<0)throw new TypeError(`${o.source} [THROW_ID_18] the fourth input argument must be a natural number or zero! Currently it's: ${o.fromIndex}`);if(!b(t)||0===t.length){if(o.relaxedAPI)return[];throw new TypeError(`string-find-heads-tails: [THROW_ID_02] the first input argument, input string, must be a non-zero-length string! Currently it's: ${typeof t}, equal to: ${t}`)}let s,l;if("string"!=typeof e&&!Array.isArray(e)){if(o.relaxedAPI)return[];throw new TypeError(`string-find-heads-tails: [THROW_ID_03] the second input argument, heads, must be either a string or an array of strings! Currently it's: ${typeof e}, equal to:\n${JSON.stringify(e,null,4)}`)}if("string"==typeof e){if(0===e.length){if(o.relaxedAPI)return[];throw new TypeError("string-find-heads-tails: [THROW_ID_04] the second input argument, heads, must be a non-empty string! Currently it's empty.")}e=h(e)}else if(Array.isArray(e)){if(0===e.length){if(o.relaxedAPI)return[];throw new TypeError("string-find-heads-tails: [THROW_ID_05] the second input argument, heads, must be a non-empty array and contain at least one string! Currently it's empty.")}if(e.every((t,e)=>(s=t,l=e,b(t)))){if(!e.every((t,e)=>(l=e,b(t)&&t.length>0&&""!==t.trim()))){if(!o.relaxedAPI)throw new TypeError(`string-find-heads-tails: [THROW_ID_07] the second input argument, heads, should not contain empty strings! For example, there's one detected at index ${l} of heads array:\n${JSON.stringify(e,null,4)}.`);if(0===(e=e.filter(t=>b(t)&&t.length>0)).length)return[]}}else{if(!o.relaxedAPI)throw new TypeError(`string-find-heads-tails: [THROW_ID_06] the second input argument, heads, contains non-string elements! For example, element at ${l}th index is ${typeof s}, equal to:\n${JSON.stringify(s,null,4)}. Whole heads array looks like:\n${JSON.stringify(e,null,4)}`);if(0===(e=e.filter(t=>b(t)&&t.length>0)).length)return[]}}if(!b(r)&&!Array.isArray(r)){if(o.relaxedAPI)return[];throw new TypeError(`string-find-heads-tails: [THROW_ID_08] the third input argument, tails, must be either a string or an array of strings! Currently it's: ${typeof r}, equal to:\n${JSON.stringify(r,null,4)}`)}if(b(r)){if(0===r.length){if(o.relaxedAPI)return[];throw new TypeError("string-find-heads-tails: [THROW_ID_09] the third input argument, tails, must be a non-empty string! Currently it's empty.")}r=h(r)}else if(Array.isArray(r)){if(0===r.length){if(o.relaxedAPI)return[];throw new TypeError("string-find-heads-tails: [THROW_ID_10] the third input argument, tails, must be a non-empty array and contain at least one string! Currently it's empty.")}if(r.every((t,e)=>(s=t,l=e,b(t)))){if(!r.every((t,e)=>(l=e,b(t)&&t.length>0&&""!==t.trim()))){if(!o.relaxedAPI)throw new TypeError(`string-find-heads-tails: [THROW_ID_12] the third input argument, tails, should not contain empty strings! For example, there's one detected at index ${l}. Whole tails array is equal to:\n${JSON.stringify(r,null,4)}`);if(0===(r=r.filter(t=>b(t)&&t.length>0)).length)return[]}}else{if(!o.relaxedAPI)throw new TypeError(`string-find-heads-tails: [THROW_ID_11] the third input argument, tails, contains non-string elements! For example, element at ${l}th index is ${typeof s}, equal to:\n${JSON.stringify(s,null,4)}. Whole tails array is equal to:\n${JSON.stringify(r,null,4)}`);if(0===(r=r.filter(t=>b(t)&&t.length>0)).length)return[]}}const u=o.source===a.source;if(o.throwWhenSomethingWrongIsDetected&&!o.allowWholeValueToBeOnlyHeadsOrTails){if(h(e).includes(t))throw new Error(`${o.source}${u?": [THROW_ID_16]":""} the whole input string can't be equal to ${b(e)?"":"one of "}heads (${t})!`);if(h(r).includes(t))throw new Error(`${o.source}${u?": [THROW_ID_17]":""} the whole input string can't be equal to ${b(r)?"":"one of "}tails (${t})!`)}const c=e.concat(r).map(t=>t.charAt(0)).reduce((t,e)=>e.charCodeAt(0)>t[1]?[t[0],e.charCodeAt(0)]:e.charCodeAt(0)<t[0]?[e.charCodeAt(0),t[1]]:t,[e[0].charCodeAt(0),e[0].charCodeAt(0)]),f=[];let g,p=!1,d={},y=!1;for(let n=o.fromIndex,i=t.length;n<i;n++){const a=t[n].charCodeAt(0);if(a<=c[1]&&a>=c[0]){const a=m(t,n,e);if(a&&o.matchHeadsAndTailsStrictlyInPairsByTheirOrder)for(let t=e.length;t--;)if(e[t]===a){g=t;break}if(a){if(!p){d={},d.headsStartAt=n,d.headsEndAt=n+a.length,p=!0,n+=a.length-1,y&&(y=!1);continue}if(o.throwWhenSomethingWrongIsDetected)throw new TypeError(`${o.source}${u?": [THROW_ID_19]":""} When processing "${t}", we found heads (${t.slice(n,n+a.length)}) starting at character with index number "${n}" and there was another set of heads before it! Generally speaking, there should be "heads-tails-heads-tails", not "heads-heads-tails"!\nWe're talking about the area of the code:\n\n\n--------------------------------------starts\n${t.slice(Math.max(n-200,0),n)}\n      [33m-------\x3e[39m ${`[31m${t.slice(n,n+a.length)}[39m`} [33m<-------[39m\n${t.slice(n+a.length,Math.min(i,n+200))}\n--------------------------------------ends\n\n\nTo turn off this error being thrown, set opts.throwWhenSomethingWrongIsDetected to Boolean false.`)}const s=m(t,n,r);if(p&&s&&o.matchHeadsAndTailsStrictlyInPairsByTheirOrder&&void 0!==g&&void 0!==r[g]&&r[g]!==s){let n;for(let t=r.length;t--;)if(r[t]===s){n=t;break}throw new TypeError(`${o.source}${u?": [THROW_ID_20]":""} When processing "${t}", we had "opts.matchHeadsAndTailsStrictlyInPairsByTheirOrder" on. We found heads (${e[g]}) but the tails the followed it were not of the same index, ${g} (${r[g]}) but ${n} (${s}).`)}if(s){if(p){d.tailsStartAt=n,d.tailsEndAt=n+s.length,f.push(d),d={},p=!1,n+=s.length-1;continue}o.throwWhenSomethingWrongIsDetected&&(y=`${o.source}${u?": [THROW_ID_21]":""} When processing "${t}", we found tails (${t.slice(n,n+s.length)}) starting at character with index number "${n}" but there were no heads preceding it. That's very naughty!`)}}if(o.throwWhenSomethingWrongIsDetected&&n===i-1){if(0!==Object.keys(d).length)throw new TypeError(`${o.source}${u?": [THROW_ID_22]":""} When processing "${t}", we reached the end of the string and yet didn't find any tails (${JSON.stringify(r,null,4)}) to match the last detected heads (${t.slice(d.headsStartAt,d.headsEndAt)})!`);if(y)throw new Error(y)}}return f}const v=Array.isArray;function _(t){return null!=t}function T(t,e,r){if(!_(t))throw new Error("ast-get-values-by-key: [THROW_ID_01] the first argument is missing!");if(!_(e))throw new Error("ast-get-values-by-key: [THROW_ID_02] the second argument is missing!");if(v(e)){let t,r;if(e.length&&e.some((e,n)=>"string"!=typeof e&&(t=n,r=e,!0)))throw new Error(`ast-get-values-by-key: [THROW_ID_03] the second argument is array of values and not all of them are strings! For example, at index ${t}, we have a value ${JSON.stringify(r,null,0)} which is not string but ${typeof r}!`)}else if("string"!=typeof e)throw new Error(`ast-get-values-by-key: [THROW_ID_04] the second argument must be string! Currently it's of a type "${typeof e}", equal to:\n${JSON.stringify(e,null,4)}`);let i;_(r)&&(i="string"==typeof r?[r]:n(r));const o=[],s=a(t,(t,r,n)=>{const a=void 0!==r?r:t;if(void 0!==r&&u.isMatch(t,e,{caseSensitive:!0}))if(void 0===i)o.push({val:r,path:n.path});else if(i.length>0)return i.shift();return a});return void 0===i?o:s}function O(t,e=!0,r){if(!(r.trim().length||t.length&&"\n"!==r&&" "!==r&&" "===(e?t[t.length-1]:t[0])||t.length&&"\n"===(e?t[t.length-1]:t[0])&&"\n"!==r&&" "!==r))if(e){if(("\n"===r||" "===r)&&t.length&&" "===t[t.length-1])for(;t.length&&" "===t[t.length-1];)t.pop();t.push(" "===r||"\n"===r?r:" ")}else{if(("\n"===r||" "===r)&&t.length&&" "===t[0])for(;t.length&&" "===t[0];)t.shift();t.unshift(" "===r||"\n"===r?r:" ")}}function A(t,e){if("string"==typeof t&&t.length){let r,n,i=!1;if(t.includes("\r\n")&&(i=!0),r=e&&"number"==typeof e?e:1,""===t.trim()){const e=[];for(n=r,Array.from(t).forEach(t=>{("\n"!==t||n)&&("\n"===t&&n--,O(e,!0,t))});e.length>1&&" "===e[e.length-1];)e.pop();return e.join("")}const a=[];if(n=r,""===t[0].trim())for(let e=0,r=t.length;e<r&&0===t[e].trim().length;e++)("\n"!==t[e]||n)&&("\n"===t[e]&&n--,O(a,!0,t[e]));const o=[];if(n=r,""===t.slice(-1).trim())for(let e=t.length;e--&&0===t[e].trim().length;)("\n"!==t[e]||n)&&("\n"===t[e]&&n--,O(o,!1,t[e]));return i?`${a.join("")}${t.trim()}${o.join("")}`.replace(/\n/g,"\r\n"):a.join("")+t.trim()+o.join("")}return t}function W(t,e){if(!Array.isArray(t))throw new TypeError(`ranges-sort: [THROW_ID_01] Input must be an array, consisting of range arrays! Currently its type is: ${typeof t}, equal to: ${JSON.stringify(t,null,4)}`);if(0===t.length)return t;const r=Object.assign({},{strictlyTwoElementsInRangeArrays:!1,progressFn:null},e);let n,i;if(r.strictlyTwoElementsInRangeArrays&&!t.every((t,e)=>2===t.length||(n=e,i=t.length,!1)))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${n}th range (${JSON.stringify(t[n],null,4)}) has not two but ${i} elements!`);if(!t.every((t,e)=>!(!Number.isInteger(t[0])||t[0]<0||!Number.isInteger(t[1])||t[1]<0)||(n=e,!1)))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${n}th range (${JSON.stringify(t[n],null,4)}) does not consist of only natural numbers!`);const a=t.length*t.length;let o=0;return Array.from(t).sort((t,e)=>(r.progressFn&&(o++,r.progressFn(Math.floor(100*o/a))),t[0]===e[0]?t[1]<e[1]?-1:t[1]>e[1]?1:0:t[0]<e[0]?-1:1))}function j(t,e){function r(t){return"string"==typeof t}function n(t){return t&&"object"==typeof t&&!Array.isArray(t)}if(!Array.isArray(t))return t;const i={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};let a;if(e){if(!n(e))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n${JSON.stringify(e,null,4)} (type ${typeof e})`);if(a=Object.assign({},i,e),a.progressFn&&n(a.progressFn)&&!Object.keys(a.progressFn).length)a.progressFn=null;else if(a.progressFn&&"function"!=typeof a.progressFn)throw new Error(`ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "${typeof a.progressFn}", equal to ${JSON.stringify(a.progressFn,null,4)}`);if(a.mergeType&&1!==a.mergeType&&2!==a.mergeType)if(r(a.mergeType)&&"1"===a.mergeType.trim())a.mergeType=1;else{if(!r(a.mergeType)||"2"!==a.mergeType.trim())throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof a.mergeType}", equal to ${JSON.stringify(a.mergeType,null,4)}`);a.mergeType=2}if("boolean"!=typeof a.joinRangesThatTouchEdges)throw new Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof a.joinRangesThatTouchEdges}", equal to ${JSON.stringify(a.joinRangesThatTouchEdges,null,4)}`)}else a=Object.assign({},i);const o=t.map(t=>[...t]).filter(t=>void 0!==t[2]||t[0]!==t[1]);let s,l,u;s=a.progressFn?W(o,{progressFn:t=>{u=Math.floor(t/5),u!==l&&(l=u,a.progressFn(u))}}):W(o);const c=s.length-1;for(let t=c;t>0;t--)a.progressFn&&(u=Math.floor(78*(1-t/c))+21,u!==l&&u>l&&(l=u,a.progressFn(u))),(s[t][0]<=s[t-1][0]||!a.joinRangesThatTouchEdges&&s[t][0]<s[t-1][1]||a.joinRangesThatTouchEdges&&s[t][0]<=s[t-1][1])&&(s[t-1][0]=Math.min(s[t][0],s[t-1][0]),s[t-1][1]=Math.max(s[t][1],s[t-1][1]),void 0!==s[t][2]&&(s[t-1][0]>=s[t][0]||s[t-1][1]<=s[t][1])&&null!==s[t-1][2]&&(null===s[t][2]&&null!==s[t-1][2]?s[t-1][2]=null:void 0!==s[t-1][2]?2===a.mergeType&&s[t-1][0]===s[t][0]?s[t-1][2]=s[t][2]:s[t-1][2]+=s[t][2]:s[t-1][2]=s[t][2]),s.splice(t,1),t=s.length);return s}function I(t){return null!=t}function $(t){return Number.isInteger(t)&&t>=0}function E(t){return"string"==typeof t}function S(t){return/^\d*$/.test(t)?parseInt(t,10):t}class R{constructor(t){const e=Object.assign({},{limitToBeAddedWhitespace:!1,limitLinebreaksCount:1,mergeType:1},t);if(e.mergeType&&1!==e.mergeType&&2!==e.mergeType)if(E(e.mergeType)&&"1"===e.mergeType.trim())e.mergeType=1;else{if(!E(e.mergeType)||"2"!==e.mergeType.trim())throw new Error(`ranges-push: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof e.mergeType}", equal to ${JSON.stringify(e.mergeType,null,4)}`);e.mergeType=2}this.opts=e}add(t,e,r,...n){if(n.length>0)throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_03] Please don't overload the add() method. From the 4th input argument onwards we see these redundant arguments: ${JSON.stringify(n,null,4)}`);if(!I(t)&&!I(e))return;if(I(t)&&!I(e)){if(Array.isArray(t)){if(t.length){if(t.some(t=>Array.isArray(t)))return void t.forEach(t=>{Array.isArray(t)&&this.add(...t)});t.length>1&&$(S(t[0]))&&$(S(t[1]))&&this.add(...t)}return}throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_12] the first input argument, "from" is set (${JSON.stringify(t,null,0)}) but second-one, "to" is not (${JSON.stringify(e,null,0)})`)}if(!I(t)&&I(e))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_13] the second input argument, "to" is set (${JSON.stringify(e,null,0)}) but first-one, "from" is not (${JSON.stringify(t,null,0)})`);const i=/^\d*$/.test(t)?parseInt(t,10):t,a=/^\d*$/.test(e)?parseInt(e,10):e;if($(r)&&(r=String(r)),!$(i)||!$(a))throw $(i)&&i>=0?new TypeError(`ranges-push/Ranges/add(): [THROW_ID_10] "to" value, the second input argument, must be a natural number or zero! Currently it's of a type "${typeof a}" equal to: ${JSON.stringify(a,null,4)}`):new TypeError(`ranges-push/Ranges/add(): [THROW_ID_09] "from" value, the first input argument, must be a natural number or zero! Currently it's of a type "${typeof i}" equal to: ${JSON.stringify(i,null,4)}`);if(I(r)&&!E(r)&&!$(r))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_08] The third argument, the value to add, was given not as string but ${typeof r}, equal to:\n${JSON.stringify(r,null,4)}`);if(I(this.slices)&&Array.isArray(this.last())&&i===this.last()[1]){if(this.last()[1]=a,this.last()[2],null!==this.last()[2]&&I(r)){let t=!(I(this.last()[2])&&this.last()[2].length>0)||this.opts&&this.opts.mergeType&&1!==this.opts.mergeType?r:this.last()[2]+r;this.opts.limitToBeAddedWhitespace&&(t=A(t,this.opts.limitLinebreaksCount)),E(t)&&!t.length||(this.last()[2]=t)}}else{this.slices||(this.slices=[]);const t=void 0===r||E(r)&&!r.length?[i,a]:[i,a,this.opts.limitToBeAddedWhitespace?A(r,this.opts.limitLinebreaksCount):r];this.slices.push(t)}}push(t,e,r,...n){this.add(t,e,r,...n)}current(){return null!=this.slices?(this.slices=j(this.slices,{mergeType:this.opts.mergeType}),this.opts.limitToBeAddedWhitespace?this.slices.map(t=>I(t[2])?[t[0],t[1],A(t[2],this.opts.limitLinebreaksCount)]:t):this.slices):null}wipe(){this.slices=void 0}replace(t){if(Array.isArray(t)&&t.length){if(!Array.isArray(t[0])||!$(t[0][0]))throw new Error(`ranges-push/Ranges/replace(): [THROW_ID_11] Single range was given but we expected array of arrays! The first element, ${JSON.stringify(t[0],null,4)} should be an array and its first element should be an integer, a string index.`);this.slices=Array.from(t)}else this.slices=void 0}last(){return void 0!==this.slices&&Array.isArray(this.slices)?this.slices[this.slices.length-1]:null}}function D(t){return null!=t}function H(t){return"string"==typeof t}function N(t,e,r){let n=0,i=0;if(0===arguments.length)throw new Error("ranges-apply: [THROW_ID_01] inputs missing!");if(!H(t))throw new TypeError(`ranges-apply: [THROW_ID_02] first input argument must be a string! Currently it's: ${typeof t}, equal to: ${JSON.stringify(t,null,4)}`);if(null===e)return t;if(!Array.isArray(e))throw new TypeError(`ranges-apply: [THROW_ID_03] second input argument must be an array (or null)! Currently it's: ${typeof e}, equal to: ${JSON.stringify(e,null,4)}`);if(r&&"function"!=typeof r)throw new TypeError(`ranges-apply: [THROW_ID_04] the third input argument must be a function (or falsey)! Currently it's: ${typeof r}, equal to: ${JSON.stringify(r,null,4)}`);Array.isArray(e)&&(Number.isInteger(e[0])&&e[0]>=0||/^\d*$/.test(e[0]))&&(Number.isInteger(e[1])&&e[1]>=0||/^\d*$/.test(e[1]))&&(e=[e]);const a=e.length;let o=0;e.forEach((t,s)=>{if(r&&(n=Math.floor(o/a*10),n!==i&&(i=n,r(n))),!Array.isArray(t))throw new TypeError(`ranges-apply: [THROW_ID_05] ranges array, second input arg., has ${s}th element not an array: ${JSON.stringify(t,null,4)}, which is ${typeof t}`);if(!Number.isInteger(t[0])||t[0]<0){if(!/^\d*$/.test(t[0]))throw new TypeError(`ranges-apply: [THROW_ID_06] ranges array, second input arg. has ${s}th element, array [${t[0]},${t[1]}]. That array has first element not an integer, but ${typeof t[0]}, equal to: ${JSON.stringify(t[0],null,4)}. Computer doesn't like this.`);e[s][0]=Number.parseInt(e[s][0],10)}if(!Number.isInteger(t[1])){if(!/^\d*$/.test(t[1]))throw new TypeError(`ranges-apply: [THROW_ID_07] ranges array, second input arg. has ${s}th element, array [${t[0]},${t[1]}]. That array has second element not an integer, but ${typeof t[1]}, equal to: ${JSON.stringify(t[1],null,4)}. Computer doesn't like this.`);e[s][1]=Number.parseInt(e[s][1],10)}o++});const s=j(e,{progressFn:t=>{r&&(n=10+Math.floor(t/10),n!==i&&(i=n,r(n)))}}),l=s.length;if(l>0){const e=t.slice(s[l-1][1]);t=s.reduce((e,a,o,s)=>{r&&(n=20+Math.floor(o/l*80),n!==i&&(i=n,r(n)));const u=0===o?0:s[o-1][1],c=s[o][0];return e+t.slice(u,c)+(D(s[o][2])?s[o][2]:"")},""),t+=e}return t}var x,M,C=Function.prototype,B=Object.prototype,k=C.toString,F=B.hasOwnProperty,J=k.call(Object),V=B.toString,P=(x=Object.getPrototypeOf,M=Object,function(t){return x(M(t))});var q=function(t){if(!function(t){return!!t&&"object"==typeof t}(t)||"[object Object]"!=V.call(t)||function(t){var e=!1;if(null!=t&&"function"!=typeof t.toString)try{e=!!(t+"")}catch(t){}return e}(t))return!1;var e=P(t);if(null===e)return!0;var r=F.call(e,"constructor")&&e.constructor;return"function"==typeof r&&r instanceof r&&k.call(r)==J};function L(t,e){if("string"!=typeof t)throw new Error(`string-trim-spaces-only: [THROW_ID_01] input must be string! It was given as ${typeof t}, equal to:\n${JSON.stringify(t,null,4)}`);const r=Object.assign({},{classicTrim:!1,cr:!1,lf:!1,tab:!1,space:!0,nbsp:!1},e);function n(t){return r.classicTrim&&0===t.trim().length||!r.classicTrim&&(r.space&&" "===t||r.cr&&"\r"===t||r.lf&&"\n"===t||r.tab&&"\t"===t||r.nbsp&&" "===t)}let i,a;if(t.length>0){if(n(t[0]))for(let e=0,r=t.length;e<r;e++){if(!n(t[e])){i=e;break}if(e===t.length-1)return{res:"",ranges:[[0,t.length]]}}if(n(t[t.length-1]))for(let e=t.length;e--;)if(!n(t[e])){a=e+1;break}return i?a?{res:t.slice(i,a),ranges:[[0,i],[a,t.length]]}:{res:t.slice(i),ranges:[[0,i]]}:a?{res:t.slice(0,a),ranges:[[a,t.length]]}:{res:t,ranges:[]}}return{res:"",ranges:[]}}function U(t,e={}){function r(t){return null!=t}const n=Object.prototype.hasOwnProperty;function i(t){return"string"==typeof t}if(void 0===t)throw new Error("string-remove-duplicate-heads-tails: [THROW_ID_01] The input is missing!");if("string"!=typeof t)return t;if(r(e)&&!q(e))throw new Error(`string-remove-duplicate-heads-tails: [THROW_ID_03] The given options are not a plain object but ${typeof e}!`);if(r(e)&&n.call(e,"heads")){if(!h(e.heads).every(t=>i(t)))throw new Error("string-remove-duplicate-heads-tails: [THROW_ID_04] The opts.heads contains elements which are not string-type!");i(e.heads)&&(e.heads=h(e.heads))}if(r(e)&&n.call(e,"tails")){if(!h(e.tails).every(t=>i(t)))throw new Error("string-remove-duplicate-heads-tails: [THROW_ID_05] The opts.tails contains elements which are not string-type!");i(e.tails)&&(e.tails=h(e.tails))}const a=L(t).res;if(0===a.length)return t;t=a;const o=Object.assign({},{heads:["{{"],tails:["}}"]},e);o.heads=o.heads.map(t=>t.trim()),o.tails=o.tails.map(t=>t.trim());let s=!1,l=!1;const u=new R({limitToBeAddedWhitespace:!0}),c=new R({limitToBeAddedWhitespace:!0});let f=!0,g=!0,p="";function d(t,e){let r;return m(t,0,e.heads,{trimBeforeMatching:!0,cb:(t,e,n)=>(r=n,!0),relaxedApi:!0})&&m(t,r,e.tails,{trimBeforeMatching:!0,cb:(t,e,n)=>(r=n,!0),relaxedApi:!0})?t.slice(r):t}for(;t!==d(t,o);)t=L(d(t,o)).res;function b(t,e){let r;return y(t,t.length-1,e.tails,{trimBeforeMatching:!0,cb:(t,e,n)=>(r=n,!0),relaxedApi:!0})&&y(t,r,e.heads,{trimBeforeMatching:!0,cb:(t,e,n)=>(r=n,!0),relaxedApi:!0})?t.slice(0,r+1):t}for(;t!==b(t,o);)t=L(b(t,o)).res;if(!(o.heads.length&&m(t,0,o.heads,{trimBeforeMatching:!0,relaxedApi:!0})&&o.tails.length&&y(t,t.length-1,o.tails,{trimBeforeMatching:!0,relaxedApi:!0})))return L(t).res;for(let e=0,n=t.length;e<n;e++)if(""===t[e].trim());else{let n;if(m(t,e,o.heads,{trimBeforeMatching:!0,cb:(t,e,r)=>(n=r,!0),relaxedApi:!0})){let r;g=!0,f&&(f=!0),m(t,n,o.tails,{trimBeforeMatching:!0,cb:(t,e,n)=>(r=n,!0),relaxedApi:!0})&&u.push(e,r),c.current()&&s&&"tails"!==p&&u.push(c.current()),s||c.current()&&(u.push(c.current()),c.wipe()),c.push(e,n),p="heads",e=n-1;continue}if(m(t,e,o.tails,{trimBeforeMatching:!0,cb:(e,i,a)=>(n=r(a)?a:t.length,!0),relaxedApi:!0})){g=!0,f?("heads"===p&&c.wipe(),f=!1):c.push(e,n),p="tails",e=n-1;continue}f&&(f=!0),g&&!s?(s=!0,g=!1):g&&!l?(l=!0,f=!0,g=!1,"heads"===p&&c.wipe()):g&&l&&c.wipe()}return c.current()&&u.push(c.current()),u.current()?N(t,u.current()).trim():t.trim()}var z=Array.isArray,G=Object.prototype.hasOwnProperty;function K(t){return"string"==typeof t}function Q(t){return"boolean"==typeof t}function X(t){return null===t}function Y(t){return null!=t}function Z(t){return K(t)?t.trim():t}function tt(t){if("string"==typeof t&&t.length>0&&-1!==t.indexOf("."))for(var e=0,r=t.length;e<r;e++)if("."===t[e])return t.slice(e+1);return t}function et(t){if("string"==typeof t&&t.length>0&&-1!==t.indexOf("."))for(var e=t.length;e--;)if("."===t[e])return t.slice(0,e);return t}function rt(t){if("string"==typeof t&&t.length>0&&-1!==t.indexOf("."))for(var e=t.length;e--;)if("."===t[e])return t.slice(e+1);return t}function nt(t,e){return"string"==typeof t&&0!==t.trim().length&&!!(t.includes(e.heads)||t.includes(e.tails)||K(e.headsNoWrap)&&e.headsNoWrap.length>0&&t.includes(e.headsNoWrap)||K(e.tailsNoWrap)&&e.tailsNoWrap.length>0&&t.includes(e.tailsNoWrap))}function it(t,e,r){var n,i;return"string"==typeof t&&t.length>0&&m(t,0,e,{trimBeforeMatching:!0,cb:function(t,e,r){return n=r,!0}})&&y(t,t.length-1,r,{trimBeforeMatching:!0,cb:function(t,e,r){return i=r+1,!0}})?t.slice(n,i):t}function at(t,e){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>5?arguments[5]:void 0;if(e.wrapHeadsWith||(e.wrapHeadsWith=""),e.wrapTailsWith||(e.wrapTailsWith=""),K(t)&&!r&&e.wrapGlobalFlipSwitch&&!e.dontWrapVars.some((function(t){return u.isMatch(n,t)}))&&(!e.preventDoubleWrapping||e.preventDoubleWrapping&&K(t)&&!t.includes(e.wrapHeadsWith)&&!t.includes(e.wrapTailsWith)))return e.wrapHeadsWith+t+e.wrapTailsWith;if(r){if(!K(t))return t;var i=U(t,{heads:e.wrapHeadsWith,tails:e.wrapTailsWith});return K(i)?it(i,e.wrapHeadsWith,e.wrapTailsWith):i}return t}function ot(t,e,r,n){var i;if(-1!==r.indexOf(".")){var a=r,o=!0;if(n.lookForDataContainers&&"string"==typeof n.dataContainerIdentifierTails&&n.dataContainerIdentifierTails.length>0&&!a.endsWith(n.dataContainerIdentifierTails)){var s=c.get(t,a+n.dataContainerIdentifierTails);q(s)&&c.get(s,e)&&(i=c.get(s,e),o=!1)}for(;o&&-1!==a.indexOf(".");){if(rt(a=et(a))===e)throw new Error('json-variables/findValues(): [THROW_ID_20] While trying to resolve: "'.concat(e,'" at path "').concat(r,'", we encountered a closed loop. The parent key "').concat(rt(a),'" is called the same as the variable "').concat(e,"\" we're looking for."));if(n.lookForDataContainers&&"string"==typeof n.dataContainerIdentifierTails&&n.dataContainerIdentifierTails.length>0&&!a.endsWith(n.dataContainerIdentifierTails)){var l=c.get(t,a+n.dataContainerIdentifierTails);q(l)&&c.get(l,e)&&(i=c.get(l,e),o=!1)}if(void 0===i){var u=c.get(t,a);q(u)&&c.get(u,e)&&(i=c.get(u,e),o=!1)}}}if(void 0===i){var h=c.get(t,e);void 0!==h&&(i=h)}if(void 0===i)if(-1===e.indexOf(".")){var f=T(t,e);if(f.length>0)for(var g=0,p=f.length;g<p;g++){if(K(f[g].val)||Q(f[g].val)||X(f[g].val)){i=f[g].val;break}if("number"==typeof f[g].val){i=String(f[g].val);break}if(z(f[g].val)){i=f[g].val.join("");break}throw new Error('json-variables/findValues(): [THROW_ID_21] While trying to resolve: "'.concat(e,'" at path "').concat(r,'", we actually found the key named ').concat(e,", but it was not equal to a string but to:\n").concat(JSON.stringify(f[g],null,4),"\nWe can't resolve a string with that! It should be a string."))}}else{var d=T(t,function(t){if("string"==typeof t&&t.length>0&&-1!==t.indexOf("."))for(var e=0,r=t.length;e<r;e++)if("."===t[e])return t.slice(0,e);return t}(e));if(d.length>0)for(var y=0,m=d.length;y<m;y++){var b=c.get(d[y].val,tt(e));b&&K(b)&&(i=b)}}return i}function st(t,e,r,i){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[];if(a.includes(r)){var o="";if(a.length>1){var s=" →\n";o=a.reduce((function(t,e,n){return t+(0===n?"":s)+(e===r?"💥 ":"  ")+e})," Here's the path we travelled up until we hit the recursion:\n\n"),o+="".concat(s,"💥 ").concat(r)}throw new Error('json-variables/resolveString(): [THROW_ID_19] While trying to resolve: "'.concat(e,'" at path "').concat(r,'", we encountered a closed loop, the key is referencing itself."').concat(o))}var l={},u=n(a);u.push(r);var c,h=new R;function f(n,a,o){for(var s=0,c=n.length;s<c;s++){var f=n[s],g=e.slice(f.headsEndAt,f.tailsStartAt);if(0===g.length)h.push(f.headsStartAt,f.tailsEndAt);else if(G.call(l,g)&&K(l[g]))h.push(f.headsStartAt,f.tailsEndAt,l[g]);else{var p=ot(t,g.trim(),r,i);if(void 0===p)throw new Error("json-variables/processHeadsAndTails(): [THROW_ID_18] We couldn't find the value to resolve the variable ".concat(e.slice(f.headsEndAt,f.tailsStartAt),". We're at path: \"").concat(r,'".'));if(!o&&i.throwWhenNonStringInsertedInString&&!K(p))throw new Error("json-variables/processHeadsAndTails(): [THROW_ID_23] While resolving the variable ".concat(e.slice(f.headsEndAt,f.tailsStartAt)," at path ").concat(r,", it resolved into a non-string value, ").concat(JSON.stringify(p,null,4),'. This is happening because options setting "throwWhenNonStringInsertedInString" is active (set to "true").'));if(Q(p)){if(i.resolveToBoolIfAnyValuesContainBool)return h=void 0,!i.resolveToFalseIfAnyValuesContainBool&&p;p=""}else{if(X(p)&&o)return h=void 0,p;p=z(p)?String(p.join("")):X(p)?"":String(p)}var d=r.includes(".")?"".concat(et(r),".").concat(g):g;if(nt(p,i)){var y=at(st(t,p,d,i,u),i,a,u,d,g.trim());K(y)&&h.push(f.headsStartAt,f.tailsEndAt,y)}else{l[g]=p;var m=at(p,i,a,u,d,g.trim());K(m)&&h.push(f.headsStartAt,f.tailsEndAt,m)}}}}try{c=w(e,i.heads,i.tails,{source:"",throwWhenSomethingWrongIsDetected:!1})}catch(t){throw new Error('json-variables/resolveString(): [THROW_ID_17] While trying to resolve string: "'.concat(e,'" at path ').concat(r,", something wrong with heads and tails was detected! Here's the internal error message:\n").concat(t))}var g=!1;1===c.length&&""===N(e,[c[0].headsStartAt,c[0].tailsEndAt]).trim()&&(g=!0);var p=f(c,!1,g);if(Q(p))return p;if(X(p))return p;try{c=w(e,i.headsNoWrap,i.tailsNoWrap,{source:"",throwWhenSomethingWrongIsDetected:!1})}catch(t){throw new Error('json-variables/resolveString(): [THROW_ID_22] While trying to resolve string: "'.concat(e,'" at path ').concat(r,", something wrong with no-wrap heads and no-wrap tails was detected! Here's the internal error message:\n").concat(t))}1===c.length&&""===N(e,[c[0].headsStartAt,c[0].tailsEndAt]).trim()&&(g=!0);var d=f(c,!0,g);return Q(d)||X(d)?d:h&&h.current()?N(e,h.current()):e}return function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(0===arguments.length)throw new Error("json-variables/jsonVariables(): [THROW_ID_01] Alas! Inputs are missing!");if(!q(e))throw new TypeError("json-variables/jsonVariables(): [THROW_ID_02] Alas! The input must be a plain object! Currently it's: ".concat(Array.isArray(e)?"array":t(e)));if(!q(r))throw new TypeError("json-variables/jsonVariables(): [THROW_ID_03] Alas! An Optional Options Object must be a plain object! Currently it's: ".concat(Array.isArray(r)?"array":t(r)));var i,o,s,l=n(e),u={heads:"%%_",tails:"_%%",headsNoWrap:"%%-",tailsNoWrap:"-%%",lookForDataContainers:!0,dataContainerIdentifierTails:"_data",wrapHeadsWith:"",wrapTailsWith:"",dontWrapVars:[],preventDoubleWrapping:!0,wrapGlobalFlipSwitch:!0,noSingleMarkers:!1,resolveToBoolIfAnyValuesContainBool:!0,resolveToFalseIfAnyValuesContainBool:!0,throwWhenNonStringInsertedInString:!1},c=Object.assign({},u,r);if(c.dontWrapVars?z(c.dontWrapVars)||(c.dontWrapVars=h(c.dontWrapVars)):c.dontWrapVars=[],c.dontWrapVars.length>0&&!c.dontWrapVars.every((function(t,e){return!!K(t)||(i=t,o=e,!1)})))throw new Error('json-variables/jsonVariables(): [THROW_ID_05] Alas! All variable names set in opts.dontWrapVars should be of a string type. Computer detected a value "'.concat(i,'" at index ').concat(o,", which is not string but ").concat(Array.isArray(i)?"array":t(i),"!"));if(""===c.heads)throw new Error("json-variables/jsonVariables(): [THROW_ID_06] Alas! opts.heads are empty!");if(""===c.tails)throw new Error("json-variables/jsonVariables(): [THROW_ID_07] Alas! opts.tails are empty!");if(c.lookForDataContainers&&""===c.dataContainerIdentifierTails)throw new Error("json-variables/jsonVariables(): [THROW_ID_08] Alas! opts.dataContainerIdentifierTails is empty!");if(c.heads===c.tails)throw new Error("json-variables/jsonVariables(): [THROW_ID_09] Alas! opts.heads and opts.tails can't be equal!");if(c.heads===c.headsNoWrap)throw new Error("json-variables/jsonVariables(): [THROW_ID_10] Alas! opts.heads and opts.headsNoWrap can't be equal!");if(c.tails===c.tailsNoWrap)throw new Error("json-variables/jsonVariables(): [THROW_ID_11] Alas! opts.tails and opts.tailsNoWrap can't be equal!");if(""===c.headsNoWrap)throw new Error("json-variables/jsonVariables(): [THROW_ID_12] Alas! opts.headsNoWrap is an empty string!");if(""===c.tailsNoWrap)throw new Error("json-variables/jsonVariables(): [THROW_ID_13] Alas! opts.tailsNoWrap is an empty string!");if(c.headsNoWrap===c.tailsNoWrap)throw new Error("json-variables/jsonVariables(): [THROW_ID_14] Alas! opts.headsNoWrap and opts.tailsNoWrap can't be equal!");return a(l,(function(t,e,r){if(Y(e)&&nt(t,c))throw new Error("json-variables/jsonVariables(): [THROW_ID_15] Alas! Object keys can't contain variables!\nPlease check the following key: ".concat(t));if(""===(s=void 0!==e?e:t))return s;if(0!==c.heads.length&&Z(s)===Z(c.heads)||0!==c.tails.length&&Z(s)===Z(c.tails)||0!==c.headsNoWrap.length&&Z(s)===Z(c.headsNoWrap)||0!==c.tailsNoWrap.length&&Z(s)===Z(c.tailsNoWrap)){if(!c.noSingleMarkers)return s;throw new Error("json-variables/jsonVariables(): [THROW_ID_16] Alas! While processing the input, we stumbled upon ".concat(Z(s)," which is equal to ").concat(Z(s)===Z(c.heads)?"heads":"").concat(Z(s)===Z(c.tails)?"tails":"").concat(K(c.headsNoWrap)&&Z(s)===Z(c.headsNoWrap)?"headsNoWrap":"").concat(K(c.tailsNoWrap)&&Z(s)===Z(c.tailsNoWrap)?"tailsNoWrap":"",'. If you wouldn\'t have set opts.noSingleMarkers to "true" this error would not happen and computer would have left the current element (').concat(Z(s),") alone"))}return K(s)&&nt(s,c)?st(l,s,r.path,c):s}))}}));
